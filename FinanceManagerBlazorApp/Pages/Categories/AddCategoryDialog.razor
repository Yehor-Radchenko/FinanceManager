@using System.Text.Json
@using FinanceManagerCommon.ViewModels;
@using MudBlazor

@layout _Layout

@inject IHttpClientFactory ClientFactory
@inject ISnackbar Snackbar

<MudDialog @bind-IsVisible="@IsVisible">
    <DialogContent>
        <div style="text-align: center; padding-bottom: 16px;">
            <h3>Add new category</h3>
        </div>
        <MudForm Model="@category">
            <MudTextField @bind-Value="@category.Name" Label="Name" Required="true" />
            <MudSelect @bind-Value="@category.Type" Label="Type" Required="true">
                <MudSelectItem Value="0">*select type*</MudSelectItem>
                <MudSelectItem Value="1">Income</MudSelectItem>
                <MudSelectItem Value="2">Expense</MudSelectItem>
            </MudSelect>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" OnClick="SaveCategoryClick">Save</MudButton>
        <MudButton Color="Color.Secondary" Variant="Variant.Outlined" OnClick="CloseAddCategoryDialog">Cancel</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [Parameter]
    public bool IsVisible { get; set; } = false;
    [Parameter]
    public EventCallback<bool> IsVisibleChanged { get; set; }
    [Parameter]
    public EventCallback OnCategorySaved { get; set; }

    CategoryViewModel category = new CategoryViewModel();

    private async Task SaveCategoryClick()
    {
        HttpClient httpClient = ClientFactory.CreateClient();
        httpClient.BaseAddress = new Uri("https://localhost:7016");
        HttpResponseMessage response = await httpClient.PostAsJsonAsync<CategoryViewModel>("/api/category", category);
        await CloseAddCategoryDialog();
        Snackbar.Add("Saved successfully.", Severity.Success);
        await OnCategorySaved.InvokeAsync();
    }

    private async Task CloseAddCategoryDialog()
    {
        await OnCategorySaved.InvokeAsync();
    }
}
