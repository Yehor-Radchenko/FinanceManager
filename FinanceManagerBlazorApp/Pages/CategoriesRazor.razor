@page "/categories"

@using System.Text.Json
@using FinanceManagerBlazorApp.ViewModels;
@using MudBlazor

@inject IHttpClientFactory ClientFactory

<h1 class="mb-4">Categories</h1>

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">Finance Manager</MudText>
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" />
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <MudNavMenu>
            <MudNavLink Href="/" Match="NavLinkMatch.All">Dashboard</MudNavLink>
            <MudNavLink Href="/categories" Match="NavLinkMatch.Prefix">Categories</MudNavLink>
            <MudNavLink Href="/operations" Match="NavLinkMatch.Prefix">Operations</MudNavLink>
            <MudNavLink Href="/about" Match="NavLinkMatch.Prefix">About</MudNavLink>
        </MudNavMenu>
    </MudDrawer>
    <MudMainContent>
        <MudTable Items="@Categories" Hover="true" Breakpoint="Breakpoint.Sm" LoadingProgressColor="Color.Info">
            <HeaderContent>
                <MudTh>Id</MudTh>
                <MudTh>Name</MudTh>
                <MudTh>Type</MudTh>
            </HeaderContent>

            <RowTemplate>
                <MudTd DataLabel="Id">@context.Id</MudTd>
                <MudTd DataLabel="Name">@context.Name</MudTd>
                <MudTd DataLabel="Type">@context.Type</MudTd>
            </RowTemplate>
        </MudTable>
    </MudMainContent>
</MudLayout>

@code {
    List<Category> Categories = new List<Category>();
    bool _drawerOpen = false;

    protected override async Task OnInitializedAsync() => await LoadData();

    async Task LoadData()
    {
        HttpClient httpClient = ClientFactory.CreateClient();
        httpClient.BaseAddress = new Uri("https://localhost:7016");
        Categories = await httpClient.GetFromJsonAsync<List<Category>>("/api/category") ?? Categories;
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
    }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
}
